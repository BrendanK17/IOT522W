/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CustomerIndexImport } from './routes/customer.index'
import { Route as CustomerProfileImport } from './routes/customer.profile'
import { Route as CustomerOrderImport } from './routes/customer.order'
import { Route as CustomerCheckoutImport } from './routes/customer.checkout'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CustomerIndexRoute = CustomerIndexImport.update({
  id: '/customer/',
  path: '/customer/',
  getParentRoute: () => rootRoute,
} as any)

const CustomerProfileRoute = CustomerProfileImport.update({
  id: '/customer/profile',
  path: '/customer/profile',
  getParentRoute: () => rootRoute,
} as any)

const CustomerOrderRoute = CustomerOrderImport.update({
  id: '/customer/order',
  path: '/customer/order',
  getParentRoute: () => rootRoute,
} as any)

const CustomerCheckoutRoute = CustomerCheckoutImport.update({
  id: '/customer/checkout',
  path: '/customer/checkout',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/customer/checkout': {
      id: '/customer/checkout'
      path: '/customer/checkout'
      fullPath: '/customer/checkout'
      preLoaderRoute: typeof CustomerCheckoutImport
      parentRoute: typeof rootRoute
    }
    '/customer/order': {
      id: '/customer/order'
      path: '/customer/order'
      fullPath: '/customer/order'
      preLoaderRoute: typeof CustomerOrderImport
      parentRoute: typeof rootRoute
    }
    '/customer/profile': {
      id: '/customer/profile'
      path: '/customer/profile'
      fullPath: '/customer/profile'
      preLoaderRoute: typeof CustomerProfileImport
      parentRoute: typeof rootRoute
    }
    '/customer/': {
      id: '/customer/'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof CustomerIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/customer/checkout': typeof CustomerCheckoutRoute
  '/customer/order': typeof CustomerOrderRoute
  '/customer/profile': typeof CustomerProfileRoute
  '/customer': typeof CustomerIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/customer/checkout': typeof CustomerCheckoutRoute
  '/customer/order': typeof CustomerOrderRoute
  '/customer/profile': typeof CustomerProfileRoute
  '/customer': typeof CustomerIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/customer/checkout': typeof CustomerCheckoutRoute
  '/customer/order': typeof CustomerOrderRoute
  '/customer/profile': typeof CustomerProfileRoute
  '/customer/': typeof CustomerIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/customer/checkout'
    | '/customer/order'
    | '/customer/profile'
    | '/customer'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/customer/checkout'
    | '/customer/order'
    | '/customer/profile'
    | '/customer'
  id:
    | '__root__'
    | '/'
    | '/customer/checkout'
    | '/customer/order'
    | '/customer/profile'
    | '/customer/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CustomerCheckoutRoute: typeof CustomerCheckoutRoute
  CustomerOrderRoute: typeof CustomerOrderRoute
  CustomerProfileRoute: typeof CustomerProfileRoute
  CustomerIndexRoute: typeof CustomerIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CustomerCheckoutRoute: CustomerCheckoutRoute,
  CustomerOrderRoute: CustomerOrderRoute,
  CustomerProfileRoute: CustomerProfileRoute,
  CustomerIndexRoute: CustomerIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/customer/checkout",
        "/customer/order",
        "/customer/profile",
        "/customer/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/customer/checkout": {
      "filePath": "customer.checkout.tsx"
    },
    "/customer/order": {
      "filePath": "customer.order.tsx"
    },
    "/customer/profile": {
      "filePath": "customer.profile.tsx"
    },
    "/customer/": {
      "filePath": "customer.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
